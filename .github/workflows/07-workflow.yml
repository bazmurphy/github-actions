name: 07 Artifacts
on:
  push:
    branches:
      - main

# set the working directory for all run steps in the workflow (does not affect "uses" Actions)
defaults:
  run:
    working-directory: 04-project

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint Code
        run: npm run lint
      - name: Test Code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    # We define the Outputs
    outputs:
      # We give it an identifier and use the GitHub Actions Context
      # Using `steps` `id of the step` `outputs` `key name`
      javascript-file: ${{ steps.publish.outputs.javascript-file }}
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build Code
        run: npm run build
        # We create a step to create an Output value
      - name: Publish JS filename
        # we can access data from this step via this id
        id: publish
        # a regular a linux command that:
        # finds the javascript file in the assets folder
        # you use an identifier key of your choice and store the value in it eg. javascript-file=filename.js
        # it then writes that key=value pair into a special file $GITHUB_OUTPUT created by GitHub in the Environment your Job is running
        run: find dist/assets/*.js -type f -execdir echo 'javascript-file={}' >> $GITHUB_OUTPUT ';'
        # This allows us to Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          # we give the Artifact a name, so we can retrieve it later
          name: dist-artifact
          # this defines which files you want to store
          path: 04-project/dist
  deploy:
    # this Job needs to run from the default directory because the 04-project folder doesn't exist
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    needs: build # we need this because otherwise the Artifact will not have been uploaded and so could not be downloaded
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          # we need to provide the Artifact identifier
          name: dist-artifact
      - name: Output Current Folder and Contents
        # /home/runner/work/github-actions/github-actions
        # assets, index.html, vite.svg
        run: |
          pwd
          ls
      - name: Deploy Code
        run: echo "Deploying..."
