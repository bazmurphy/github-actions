name: 02 Test and Deploy Second-Action Project
# on: push
on: [push, workflow_dispatch] # we can add multiple event triggers

defaults:
  # set the working directory for all run steps in the workflow (does not affect "uses" Actions)
  run:
    working-directory: 01-project

jobs:
  test:
    # defaults:
    #   # alternatively set the working directory for all job steps in this specific "test" job (does not affect "uses" Actions)
    #   run:
    #     working-directory: second-action
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        # when you want to use an Action, you use the uses keyword, not the run keyword
        # and you can specify a version
        # https://github.com/actions/checkout/
        uses: actions/checkout@v4
        # the uses keyword can be combined with the with: keyword
        # and you can see the options you can use with: on the documentation
        # https://github.com/marketplace/actions/checkout
        # with:
        #   some-option: some-value
      - name: Install NodeJS
        # https://github.com/actions/setup-node/
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install Dependencies
        # "ci" is an npm feature that makes sure we are using the exact same versions of the packages that are in the package-lock.json
        run: npm ci # npm install is less safe
      - name: Run Tests
        run: npm test
  # we add a second job
  # (!) multiple jobs in a workflow run in Parallel (by default)
  deploy:
    # to instead run these Sequentially,
    # we can use the "needs" keyword and give it the identifier of another job which needs to finish successfully before it starts
    # you can optionally provide multiple jobs [job1, job2]
    needs: test
    # (!) remember every job has its own runner, so we must define it
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
      - name: Install Dependencies
        run: npm ci
      - name: Build the Project
        run: npm run build
      - name: Deploy
        # normally here we would upload it to a hosting provider
        run: echo "Deploying..."
